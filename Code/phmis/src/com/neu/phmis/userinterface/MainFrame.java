/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface;

import com.alee.laf.optionpane.WebOptionPane;
import com.alee.laf.panel.WebPanel;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.util.CommonUtil;
import com.neu.phmis.business.util.Constants;
import com.neu.phmis.business.config.DB4OConfig;
import com.neu.phmis.business.config.InitialConfig;
import com.neu.phmis.business.user.PersonDirectory;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Vineet
 */
public class MainFrame extends javax.swing.JFrame {

    private Ecosystem ecosystem;
    public static MainFrame mainFrame;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {

        try {
            initComponents();
            this.setTitle(Constants.SYSTEM_TITLE);
            this.setLocationRelativeTo(null);
            mainFrame = this;
            InitialConfig initialConfig = new InitialConfig();

            try {
                this.setIconImage(ImageIO.read(new File(Constants.SYSTEM_LOGO)));
            } catch (IOException e) {
                e.printStackTrace();
            }

            DB4OConfig dB4OConfig = new DB4OConfig();
            ecosystem = dB4OConfig.retrieveSystem();

            if (ecosystem == null) {

                ecosystem = Ecosystem.getInstance();
                InitialSetupPanel initialSetupPanel
                        = new InitialSetupPanel(container, this, ecosystem);
                CommonUtil.insertNewPanel(container, "Initial Panel",
                        initialSetupPanel, null);

            } else {
                
                Ecosystem.setEcosystem(ecosystem);
                
                PersonDirectory personDirectory = ecosystem
                        .getMasterPersonDirectory();

                if (personDirectory.getPersonList().get(0).getUserAccount()
                        .getStatus() == 0) {

                    InitialSetupPanel initialSetupPanel
                            = new InitialSetupPanel(container, this, ecosystem);
                    CommonUtil.insertNewPanel(container, "Initial Panel",
                            initialSetupPanel, null);

                    initialSetupPanel.getIntroLabel().setText("An administrator "
                            + "user exists in the system, but is still not "
                            + "activated. Please use the activation code sent to "
                            + "the inbox to activate the account.");
                    initialSetupPanel.getProceedBtn().setVisible(false);
                    initialSetupPanel.getActivationCodeText().setVisible(true);
                    initialSetupPanel.getActivateBtn().setVisible(true);

                } else {

                    LoginPanel loginPanel = new LoginPanel(container,
                            ecosystem);
                    CommonUtil.insertNewPanel(container, "Login Panel",
                            loginPanel, null);

                }

            }
        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured", "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPnl = new com.alee.laf.panel.WebPanel();
        webPanel1 = new com.alee.laf.panel.WebPanel();
        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel2 = new com.alee.laf.label.WebLabel();
        webLabel3 = new com.alee.laf.label.WebLabel();
        container = new com.alee.laf.panel.WebPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(251, 246, 246));

        mainPnl.setBackground(new java.awt.Color(245, 245, 247));

        webPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        webLabel1.setForeground(new java.awt.Color(0, 51, 255));
        webLabel1.setText("PARTNERS");
        webLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        webLabel2.setForeground(new java.awt.Color(0, 0, 255));
        webLabel2.setText("HEALTHCARE, INC");

        webLabel3.setForeground(new java.awt.Color(0, 0, 255));
        webLabel3.setText("INVENTORY MANAGEMENT SYSTEM");
        webLabel3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N

        javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(webPanel1);
        webPanel1.setLayout(webPanel1Layout);
        webPanel1Layout.setHorizontalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(274, Short.MAX_VALUE))
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        webPanel1Layout.setVerticalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        container.setBorder(new javax.swing.border.MatteBorder(null));
        container.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout mainPnlLayout = new javax.swing.GroupLayout(mainPnl);
        mainPnl.setLayout(mainPnlLayout);
        mainPnlLayout.setHorizontalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(webPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPnlLayout.setVerticalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addComponent(webPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
        );

        getContentPane().add(mainPnl, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public WebPanel getContainer() {
        return container;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.panel.WebPanel container;
    private com.alee.laf.panel.WebPanel mainPnl;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel2;
    private com.alee.laf.label.WebLabel webLabel3;
    private com.alee.laf.panel.WebPanel webPanel1;
    // End of variables declaration//GEN-END:variables
}
