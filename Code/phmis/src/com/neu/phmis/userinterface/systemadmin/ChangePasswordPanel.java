/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.systemadmin;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.user.Person;
import com.neu.phmis.business.util.CommonUtil;
import com.neu.phmis.business.util.EncryptionUtil;

/**
 *
 * @author Vineet
 */
public class ChangePasswordPanel extends javax.swing.JPanel {

    private Ecosystem ecosystem;
    private Person person;

    /**
     * Creates new form ChangePasswordPanel
     */
    public ChangePasswordPanel(Ecosystem ecosystem, Person person) {

        initComponents();

        this.ecosystem = ecosystem;
        this.person = person;
        passwordChangedLabel.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webPanel1 = new com.alee.laf.panel.WebPanel();
        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel5 = new com.alee.laf.label.WebLabel();
        webLabel6 = new com.alee.laf.label.WebLabel();
        currentPasswordText = new com.alee.laf.text.WebPasswordField();
        webLabel7 = new com.alee.laf.label.WebLabel();
        newPasswordText = new com.alee.laf.text.WebPasswordField();
        webLabel8 = new com.alee.laf.label.WebLabel();
        retypePasswordText = new com.alee.laf.text.WebPasswordField();
        createPersonBtn = new com.alee.laf.button.WebButton();
        passwordChangedLabel = new com.alee.extended.label.WebMultiLineLabel();

        setLayout(new java.awt.BorderLayout());

        webLabel1.setForeground(new java.awt.Color(0, 51, 255));
        webLabel1.setText("Settings");
        webLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        webLabel5.setText("Change Password ");
        webLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webLabel6.setText("Current Password:");
        webLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webLabel7.setText("New Password:");
        webLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webLabel8.setText("Retype New Password:");
        webLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        createPersonBtn.setForeground(new java.awt.Color(0, 0, 255));
        createPersonBtn.setText("Save Changes");
        createPersonBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        createPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPersonBtnActionPerformed(evt);
            }
        });

        passwordChangedLabel.setBackground(new java.awt.Color(0, 153, 51));
        passwordChangedLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        passwordChangedLabel.setForeground(new java.awt.Color(0, 153, 0));
        passwordChangedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordChangedLabel.setText("Password has been changed");

        javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(webPanel1);
        webPanel1.setLayout(webPanel1Layout);
        webPanel1Layout.setHorizontalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap(190, Short.MAX_VALUE)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                        .addComponent(passwordChangedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216))
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(webPanel1Layout.createSequentialGroup()
                                .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(retypePasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(webLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newPasswordText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(currentPasswordText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(webPanel1Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                                .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(157, 157, 157))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                                .addComponent(createPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127)))
                        .addContainerGap(190, Short.MAX_VALUE))))
        );
        webPanel1Layout.setVerticalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retypePasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(passwordChangedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(216, Short.MAX_VALUE))
        );

        add(webPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void createPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPersonBtnActionPerformed

        try {
            String errors = validateForm();

            if (errors.isEmpty()) {

                int ans = WebOptionPane.showConfirmDialog(null, "Are you sure "
                        + "you want to reset your password?", "Please confirm",
                        WebOptionPane.OK_CANCEL_OPTION);

                if (ans == WebOptionPane.OK_OPTION) {
                    String currentPassword = String.valueOf(currentPasswordText
                            .getPassword());
                    String newPassword = String.valueOf(newPasswordText
                            .getPassword());

                    if (person.getUserAccount().getPassword()
                            .equals(EncryptionUtil.encrypt(currentPassword))) {
                        
                        person.getUserAccount().setPassword(EncryptionUtil
                                .encrypt(newPassword));
                        
                        passwordChangedLabel.setVisible(true);
                        CommonUtil.saveChanges(ecosystem);
                        
                    } else {
                        WebOptionPane.showMessageDialog(null, "Current password "
                                + "is incorrect", "Errors",
                                WebOptionPane.ERROR_MESSAGE);
                    }
                }

            } else {
                WebOptionPane.showMessageDialog(null, errors, "Errors",
                        WebOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createPersonBtnActionPerformed

    /* ---------------------------------------------------------------------- */
    /* Validates form
    
     Parameters: NONE
    
     Returns:
     1. errorText - STRING errors if there are any
     2. errorText - STRING blank if there are no errors
     */
    private String validateForm() {

        String errorText = "";

        try {

            int errorCount = 1;

            String currentPassword = String.valueOf(currentPasswordText
                    .getPassword());
            String newPassword = String.valueOf(newPasswordText.getPassword());
            String retypePassword = String.valueOf(retypePasswordText
                    .getPassword());

            if (currentPassword.isEmpty()) {
                errorText += errorCount + ". Please enter your current "
                        + "Password\n";
                errorCount++;
            }

            if (newPassword.isEmpty()) {
                errorText += errorCount + ". Please enter the new Password\n";
                errorCount++;
            } else if (newPassword.length() < 5 || newPassword.length() > 15) {
                errorText += errorCount + ". Password should be between 5 to "
                        + "15 characters long\n";
                errorCount++;
            }

            if (retypePassword.isEmpty()) {
                errorText += errorCount + ". Please retype the Password\n";
                errorCount++;
            } else if (!newPassword.equals(retypePassword)) {
                errorText += errorCount + ". Password does not match in both "
                        + "fields\n";
                errorCount++;
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        } finally {
            return errorText;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton createPersonBtn;
    private com.alee.laf.text.WebPasswordField currentPasswordText;
    private com.alee.laf.text.WebPasswordField newPasswordText;
    private com.alee.extended.label.WebMultiLineLabel passwordChangedLabel;
    private com.alee.laf.text.WebPasswordField retypePasswordText;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel5;
    private com.alee.laf.label.WebLabel webLabel6;
    private com.alee.laf.label.WebLabel webLabel7;
    private com.alee.laf.label.WebLabel webLabel8;
    private com.alee.laf.panel.WebPanel webPanel1;
    // End of variables declaration//GEN-END:variables
}
