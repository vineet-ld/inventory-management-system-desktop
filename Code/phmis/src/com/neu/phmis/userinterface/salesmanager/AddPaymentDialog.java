/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.salesmanager;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.sales.Cheque;
import com.neu.phmis.business.sales.ETransfer;
import com.neu.phmis.business.sales.Order;
import com.neu.phmis.business.sales.Payment;
import com.neu.phmis.business.util.CommonUtil;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Date;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;

/**
 *
 * @author Vineet
 */
public class AddPaymentDialog extends javax.swing.JDialog {

    private Order order;
    private JDatePickerImpl chequeDate;
    private JDatePickerImpl paymentDate;
    private ViewSalesOrderDetailDialog viewSalesOrderDetailDialog;

    /**
     * Creates new form AddPaymentDialog
     */
    public AddPaymentDialog(java.awt.Frame parent, boolean modal, Order order,
            ViewSalesOrderDetailDialog viewSalesOrderDetailDialog) {

        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.order = order;
        this.viewSalesOrderDetailDialog = viewSalesOrderDetailDialog;

        paymentDate = CommonUtil.createDatePicker(paymentDatePanel);

        paymentModeCombo.addItem(Payment.CASH);
        paymentModeCombo.addItem(Payment.CHEQUE);
        paymentModeCombo.addItem(Payment.ETRANSFER);

        bankNameTitleLbl.setVisible(false);
        bankNameTxt.setVisible(false);
        chequeNoTitleLbl.setVisible(false);
        chequeNoTxt.setVisible(false);
        dueDateTitleLbl.setVisible(false);
        dueDatePanel.setVisible(false);
        transactionIdTitleLbl.setVisible(false);
        transactionIdTxt.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderIdLbl = new com.alee.laf.label.WebLabel();
        webLabel10 = new com.alee.laf.label.WebLabel();
        paymentModeCombo = new com.alee.laf.combobox.WebComboBox();
        webLabel11 = new com.alee.laf.label.WebLabel();
        paymentAmountTxt = new com.alee.laf.text.WebTextField();
        chequeNoTitleLbl = new com.alee.laf.label.WebLabel();
        chequeNoTxt = new com.alee.laf.text.WebTextField();
        dueDateTitleLbl = new com.alee.laf.label.WebLabel();
        transactionIdTitleLbl = new com.alee.laf.label.WebLabel();
        transactionIdTxt = new com.alee.laf.text.WebTextField();
        confirmBtn = new com.alee.laf.button.WebButton();
        cancelBtn1 = new com.alee.laf.button.WebButton();
        dueDatePanel = new com.alee.laf.panel.WebPanel();
        bankNameTitleLbl = new com.alee.laf.label.WebLabel();
        bankNameTxt = new com.alee.laf.text.WebTextField();
        dueDateTitleLbl1 = new com.alee.laf.label.WebLabel();
        paymentDatePanel = new com.alee.laf.panel.WebPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        orderIdLbl.setForeground(new java.awt.Color(0, 51, 255));
        orderIdLbl.setText("Add Payment");
        orderIdLbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        webLabel10.setText("Payment Mode:");
        webLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        paymentModeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentModeComboActionPerformed(evt);
            }
        });

        webLabel11.setText("Payment Amount:");
        webLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        chequeNoTitleLbl.setText("Cheque No:");
        chequeNoTitleLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        dueDateTitleLbl.setText("Cheque Due Date:");
        dueDateTitleLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        transactionIdTitleLbl.setText("Transaction ID:");
        transactionIdTitleLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        confirmBtn.setForeground(new java.awt.Color(0, 0, 255));
        confirmBtn.setText("Confirm");
        confirmBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        cancelBtn1.setForeground(new java.awt.Color(0, 0, 255));
        cancelBtn1.setText("Cancel");
        cancelBtn1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtn1ActionPerformed(evt);
            }
        });

        bankNameTitleLbl.setText("Bank Name:");
        bankNameTitleLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        dueDateTitleLbl1.setText("Payment Date:");
        dueDateTitleLbl1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(orderIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(webLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(paymentModeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(paymentAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(cancelBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(chequeNoTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(68, 68, 68)
                                    .addComponent(chequeNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(transactionIdTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(23, 23, 23))
                                        .addComponent(dueDateTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(21, 21, 21)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dueDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(transactionIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(bankNameTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dueDateTitleLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(paymentDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bankNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))))
                        .addGap(129, 129, 129))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(orderIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentModeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paymentDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dueDateTitleLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankNameTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bankNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chequeNoTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chequeNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dueDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(transactionIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dueDateTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionIdTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed

        try {

            String error = validateForm();

            if (error.isEmpty()) {

                Payment payment = order.getInvoice().getPaymentHistory()
                        .addPayment((String) paymentModeCombo
                                .getSelectedItem());

                BigDecimal bigDecimal = BigDecimal.valueOf(Double
                        .parseDouble(paymentAmountTxt.getText().trim()));
                payment.setAmount(bigDecimal.setScale(2, RoundingMode.CEILING));
                payment.setPaymentDate((Date) paymentDate.getModel()
                        .getValue());

                if (payment.getPaymentType().equals(Payment.CHEQUE)) {
                    ((Cheque) payment).setBankName(bankNameTxt.getText()
                            .trim());
                    ((Cheque) payment).setChequeNumber(chequeNoTxt.getText()
                            .trim());
                    ((Cheque) payment).setDateOnCheque((Date) chequeDate
                            .getModel().getValue());
                } else if (payment.getPaymentType().equals(Payment.ETRANSFER)) {
                    ((ETransfer) payment).setBankName(bankNameTxt.getText()
                            .trim());
                    ((ETransfer) payment).setTransactionId(transactionIdTxt
                            .getText().trim());
                }

                CommonUtil.saveChanges(Ecosystem.getInstance());
                viewSalesOrderDetailDialog.populateTable();
                this.dispose();

            } else {
                WebOptionPane.showMessageDialog(null, error, "Error",
                        WebOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_confirmBtnActionPerformed

    private void cancelBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtn1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtn1ActionPerformed

    private void paymentModeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeComboActionPerformed

        try {

            String paymentMode = (String) paymentModeCombo.getSelectedItem();

            if (paymentMode.equals(Payment.CHEQUE)) {
                bankNameTitleLbl.setVisible(true);
                bankNameTxt.setVisible(true);
                chequeNoTitleLbl.setVisible(true);
                chequeNoTxt.setVisible(true);
                dueDateTitleLbl.setVisible(true);
                dueDatePanel.setVisible(true);
                chequeDate = CommonUtil.createDatePicker(dueDatePanel);
                transactionIdTitleLbl.setVisible(false);
                transactionIdTxt.setVisible(false);
            } else if (paymentMode.equals(Payment.ETRANSFER)) {
                bankNameTitleLbl.setVisible(true);
                bankNameTxt.setVisible(true);
                chequeNoTitleLbl.setVisible(false);
                chequeNoTxt.setVisible(false);
                dueDateTitleLbl.setVisible(false);
                dueDatePanel.setVisible(false);
                transactionIdTitleLbl.setVisible(true);
                transactionIdTxt.setVisible(true);
            } else if (paymentMode.equals(Payment.CASH)) {
                bankNameTitleLbl.setVisible(false);
                bankNameTxt.setVisible(false);
                chequeNoTitleLbl.setVisible(false);
                chequeNoTxt.setVisible(false);
                dueDateTitleLbl.setVisible(false);
                dueDatePanel.setVisible(false);
                transactionIdTitleLbl.setVisible(false);
                transactionIdTxt.setVisible(false);
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_paymentModeComboActionPerformed

    /* ---------------------------------------------------------------------- */
    /* Validates form
    
     Parameters: NONE
    
     Returns:
     1. errorText - STRING errors if there are any
     2. errorText - STRING blank if there are no errors
     */
    private String validateForm() {

        String errorText = "";

        try {

            int errorCount = 1;

            String paymentMode = (String) paymentModeCombo.getSelectedItem();

            String paymentAmount = paymentAmountTxt.getText().trim();
            Date paymentDate = (Date) this.paymentDate.getModel().getValue();

            if (paymentAmount.equals("")) {
                errorText += errorCount + ". Please enter the Payment Amount\n";
                errorCount++;
            } else if (CommonUtil.isNAN(paymentAmount)) {
                errorText += errorCount + ". Invalid Amount\n";
                errorCount++;
            } else if (Double.parseDouble(paymentAmount) <= 0.0) {
                errorText += errorCount + ". Invalid Amount\n";
                errorCount++;
            }

            if (paymentDate.after(new Date())) {
                errorText += errorCount + ". Payment date cannot be a date "
                        + "from the future\n";
                errorCount++;
            }

            if (paymentMode.equals(Payment.CHEQUE)) {

                String chequeNo = chequeNoTxt.getText().trim();
                String bankName = bankNameTxt.getText().trim();

                if (bankName.equals("")) {
                    errorText += errorCount + ". Please enter bank name\n";
                    errorCount++;
                }

                if (chequeNo.equals("")) {
                    errorText += errorCount + ". Please enter cheque no.\n";
                    errorCount++;
                } else if (CommonUtil.isNAN(chequeNo)) {
                    errorText += errorCount + ". Invalid Cheque No.\n";
                    errorCount++;
                }

                Date date = (Date) chequeDate.getModel().getValue();
                if (date.before(order.getCreatedOn())) {
                    errorText += errorCount + ". Due date cannot be before the "
                            + "order was created\n";
                    errorCount++;
                }

            } else if (paymentMode.equals(Payment.CHEQUE)) {

                String bankName = bankNameTxt.getText().trim();

                if (bankName.equals("")) {
                    errorText += errorCount + ". Please enter bank name\n";
                    errorCount++;
                }

                if (transactionIdTxt.getText().trim().equals("")) {
                    errorText += errorCount + ". Please enter transaction ID\n";
                    errorCount++;
                }

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        } finally {
            return errorText;
        }

    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddPaymentDialog dialog
                        = new AddPaymentDialog(new javax.swing.JFrame(), true,
                                order, viewSalesOrderDetailDialog);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.label.WebLabel bankNameTitleLbl;
    private com.alee.laf.text.WebTextField bankNameTxt;
    private com.alee.laf.button.WebButton cancelBtn1;
    private com.alee.laf.label.WebLabel chequeNoTitleLbl;
    private com.alee.laf.text.WebTextField chequeNoTxt;
    private com.alee.laf.button.WebButton confirmBtn;
    private com.alee.laf.panel.WebPanel dueDatePanel;
    private com.alee.laf.label.WebLabel dueDateTitleLbl;
    private com.alee.laf.label.WebLabel dueDateTitleLbl1;
    private com.alee.laf.label.WebLabel orderIdLbl;
    private com.alee.laf.text.WebTextField paymentAmountTxt;
    private com.alee.laf.panel.WebPanel paymentDatePanel;
    private com.alee.laf.combobox.WebComboBox paymentModeCombo;
    private com.alee.laf.label.WebLabel transactionIdTitleLbl;
    private com.alee.laf.text.WebTextField transactionIdTxt;
    private com.alee.laf.label.WebLabel webLabel10;
    private com.alee.laf.label.WebLabel webLabel11;
    // End of variables declaration//GEN-END:variables
}
