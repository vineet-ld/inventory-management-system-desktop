/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.doctor;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.enterprise.HospitalEnterprise;
import com.neu.phmis.business.organization.Organization;
import com.neu.phmis.business.request.SurgeryRequest;
import com.neu.phmis.business.resource.SurgicalOperation;
import com.neu.phmis.business.user.Doctor;
import com.neu.phmis.business.user.Person;
import com.neu.phmis.business.user.PersonDirectory;
import com.neu.phmis.business.util.CommonUtil;
import com.neu.phmis.business.util.MailUtil;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;

/**
 *
 * @author Vineet
 */
public class CreateScheduleRequestDialog extends javax.swing.JDialog {

    private JDatePickerImpl fromDatePicker;
    private JDatePickerImpl toDatePicker;
    private PersonDirectory resourceManagerDirectory;
    private Doctor doctor;
    private Ecosystem ecosystem;
    private HospitalEnterprise hospitalEnterprise;
    private ManageSchedulePanel manageSchedulePanel;

    /**
     * Creates new form scheduleSurgeryDialog
     */
    public CreateScheduleRequestDialog(java.awt.Frame parent, boolean modal,
            Doctor doctor, HospitalEnterprise hospitalEnterprise,
            ManageSchedulePanel manageSchedulePanel) {

        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        fromDatePicker = CommonUtil.createDatePicker(fromDatePanel);
        toDatePicker = CommonUtil.createDatePicker(toDatePanel);
        this.doctor = doctor;
        ecosystem = Ecosystem.getInstance();
        this.hospitalEnterprise = hospitalEnterprise;
        resourceManagerDirectory = hospitalEnterprise
                .getOrganization(Organization.ORGANIZATION_RESOURCE)
                .getPersonDirectory();
        this.manageSchedulePanel = manageSchedulePanel;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        languageUpdaterSettings1 = new com.alee.managers.language.updaters.LanguageUpdaterSettings();
        webPanel1 = new com.alee.laf.panel.WebPanel();
        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel5 = new com.alee.laf.label.WebLabel();
        surgeryTypeTxt = new com.alee.laf.text.WebTextField();
        webLabel6 = new com.alee.laf.label.WebLabel();
        patientNameTxt = new com.alee.laf.text.WebTextField();
        webMultiLineLabel1 = new com.alee.extended.label.WebMultiLineLabel();
        webLabel7 = new com.alee.laf.label.WebLabel();
        webLabel8 = new com.alee.laf.label.WebLabel();
        webMultiLineLabel2 = new com.alee.extended.label.WebMultiLineLabel();
        addProductBtn = new com.alee.laf.button.WebButton();
        removeProductBtn = new com.alee.laf.button.WebButton();
        sendRequestBtn = new com.alee.laf.button.WebButton();
        cancelBtn = new com.alee.laf.button.WebButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productsTable = new com.alee.laf.table.WebTable();
        toDatePanel = new com.alee.laf.panel.WebPanel();
        fromDatePanel = new com.alee.laf.panel.WebPanel();
        webLabel9 = new com.alee.laf.label.WebLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        specialRequestTxt = new com.alee.laf.text.WebTextArea();
        webLabel10 = new com.alee.laf.label.WebLabel();
        staffSpn = new com.alee.laf.spinner.WebSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        webLabel1.setForeground(new java.awt.Color(0, 51, 255));
        webLabel1.setText("Schedule Surgery");
        webLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        webLabel5.setText("Type of Surgery:");
        webLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webLabel6.setText("Patient Name:");
        webLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webMultiLineLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        webMultiLineLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webMultiLineLabel1.setText("Please provide a date range during which you want the surgery to be scheduled.");

        webLabel7.setText("From:");
        webLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webLabel8.setText("To:");
        webLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        webMultiLineLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        webMultiLineLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webMultiLineLabel2.setText("Please list the devices you need for the surgical procedures to be reserved");

        addProductBtn.setText("Add");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });

        removeProductBtn.setText("Remove");
        removeProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductBtnActionPerformed(evt);
            }
        });

        sendRequestBtn.setForeground(new java.awt.Color(0, 0, 255));
        sendRequestBtn.setText("Send Request");
        sendRequestBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sendRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequestBtnActionPerformed(evt);
            }
        });

        cancelBtn.setForeground(new java.awt.Color(0, 0, 255));
        cancelBtn.setText("Cancel");
        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productsTable);

        webLabel9.setText("Special Instructions:");
        webLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        specialRequestTxt.setColumns(20);
        specialRequestTxt.setRows(5);
        jScrollPane1.setViewportView(specialRequestTxt);

        webLabel10.setText("No. of Staff:");
        webLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        staffSpn.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(webPanel1);
        webPanel1.setLayout(webPanel1Layout);
        webPanel1Layout.setHorizontalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fromDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addComponent(webMultiLineLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surgeryTypeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(patientNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(webPanel1Layout.createSequentialGroup()
                                .addComponent(staffSpn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(webMultiLineLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 46, Short.MAX_VALUE))
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sendRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webPanel1Layout.setVerticalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surgeryTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffSpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(webMultiLineLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(toDatePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fromDatePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addComponent(webMultiLineLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(webPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(webPanel1Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(addProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(51, 51, 51)
                .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        getContentPane().add(webPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequestBtnActionPerformed

        try {
            String errors = validateForm();

            if (errors.isEmpty()) {

                SurgicalOperation surgicalOperation = new SurgicalOperation();
                surgicalOperation.setPatientName(patientNameTxt.getText()
                        .trim());
                surgicalOperation.setSurgeryType(surgeryTypeTxt.getText()
                        .trim());
                surgicalOperation.setDoctor(doctor);

                SurgeryRequest surgeryRequest = new SurgeryRequest();
                surgeryRequest.setSurgicalOperation(surgicalOperation);
                surgeryRequest.setStartDate(CommonUtil
                        .getZeroTimeDate((Date) fromDatePicker.getModel()
                                .getValue()));
                surgeryRequest.setEndDate(CommonUtil
                        .getZeroTimeDate((Date) toDatePicker.getModel()
                                .getValue()));
                surgeryRequest.setSentBy(doctor);
                surgeryRequest.setStatus(SurgeryRequest.STATUS_PENDING);
                surgeryRequest.setNoOfStaff((Integer) staffSpn.getValue());

                ArrayList<String> productList = new ArrayList<>();
                for (int i = 0; i < productsTable.getRowCount(); i++) {
                    productList.add((String) productsTable.getValueAt(i, 0));
                }
                surgeryRequest.setDeviceList(productList);
                surgeryRequest.setSpecialInstruction(specialRequestTxt.getText()
                        .trim());

                hospitalEnterprise.getSurgeryRequestQueue().getRequestList()
                        .add(surgeryRequest);
                doctor.getSurgeryRequestQueue().getRequestList()
                        .add(surgeryRequest);
                this.setVisible(false);

                MailUtil mailUtil = null;
                for (Person person : resourceManagerDirectory.getPersonList()) {
                    if (person.getUserAccount().getStatus() == 1) {
                        mailUtil = new MailUtil(person.getEmailId());
                        StringBuffer stringBuffer = new StringBuffer();
                        stringBuffer.append(person).append(",\n A new request "
                                + "has been submitted by ").append(doctor)
                                .append(" for scheduling a surgery.");
                        mailUtil.setEmailBody(stringBuffer.toString());
                        mailUtil.setEmailSubject("New Request Notification");
                        mailUtil.sendEmail();
                    }
                }

                manageSchedulePanel.populateTables();
                CommonUtil.saveChanges(ecosystem);
            } else {
                WebOptionPane.showMessageDialog(null, errors, "Errors",
                        WebOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sendRequestBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed

        try {

            String deviceName = WebOptionPane.showInputDialog(null,
                    "Enter Device Name:", "Add Device",
                    WebOptionPane.INFORMATION_MESSAGE);
            if (deviceName != null && !deviceName.isEmpty()) {

                DefaultTableModel defaultTableModel
                        = (DefaultTableModel) productsTable.getModel();
                Object row[] = new Object[1];
                row[0] = deviceName;
                defaultTableModel.addRow(row);

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addProductBtnActionPerformed

    private void removeProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductBtnActionPerformed

        int selectedRow = productsTable.getSelectedRow();

        if (selectedRow >= 0) {
            DefaultTableModel defaultTableModel
                    = (DefaultTableModel) productsTable.getModel();
            defaultTableModel.removeRow(selectedRow);
        }

    }//GEN-LAST:event_removeProductBtnActionPerformed

    /* ---------------------------------------------------------------------- */
    /* Validates form
    
     Parameters: NONE
    
     Returns:
     1. errorText - STRING errors if there are any
     2. errorText - STRING blank if there are no errors
     */
    private String validateForm() {

        String errorText = "";

        try {

            int errorCount = 1;

            String surgeryType = surgeryTypeTxt.getText().trim();
            String patientName = patientNameTxt.getText().trim();
            Date fromDate = (Date) fromDatePicker.getModel().getValue();
            Date toDate = (Date) toDatePicker.getModel().getValue();

            if (surgeryType.equals("")) {
                errorText += errorCount + ". Please enter the Surgery Type\n";
                errorCount++;
            }

            if (patientName.equals("")) {
                errorText += errorCount + ". Please enter the Patient Name\n";
                errorCount++;
            }

            if (CommonUtil.isPastDate(fromDate)
                    || CommonUtil.isPastDate(toDate)) {
                errorText += errorCount + ". The date range cannot have dates "
                        + "from the past\n";
                errorCount++;
            } else if (fromDate.after(toDate)) {
                errorText += errorCount + ". Invalid date range\n";
                errorCount++;
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        } finally {
            return errorText;
        }

    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateScheduleRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateScheduleRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateScheduleRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateScheduleRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateScheduleRequestDialog dialog
                        = new CreateScheduleRequestDialog(new javax.swing.JFrame(),
                                true, doctor, hospitalEnterprise,
                                manageSchedulePanel);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton addProductBtn;
    private com.alee.laf.button.WebButton cancelBtn;
    private com.alee.laf.panel.WebPanel fromDatePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.alee.managers.language.updaters.LanguageUpdaterSettings languageUpdaterSettings1;
    private com.alee.laf.text.WebTextField patientNameTxt;
    private com.alee.laf.table.WebTable productsTable;
    private com.alee.laf.button.WebButton removeProductBtn;
    private com.alee.laf.button.WebButton sendRequestBtn;
    private com.alee.laf.text.WebTextArea specialRequestTxt;
    private com.alee.laf.spinner.WebSpinner staffSpn;
    private com.alee.laf.text.WebTextField surgeryTypeTxt;
    private com.alee.laf.panel.WebPanel toDatePanel;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel10;
    private com.alee.laf.label.WebLabel webLabel5;
    private com.alee.laf.label.WebLabel webLabel6;
    private com.alee.laf.label.WebLabel webLabel7;
    private com.alee.laf.label.WebLabel webLabel8;
    private com.alee.laf.label.WebLabel webLabel9;
    private com.alee.extended.label.WebMultiLineLabel webMultiLineLabel1;
    private com.alee.extended.label.WebMultiLineLabel webMultiLineLabel2;
    private com.alee.laf.panel.WebPanel webPanel1;
    // End of variables declaration//GEN-END:variables
}
