/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.inventorymanager;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.inventory.InventoryItem;
import com.neu.phmis.business.schedule.Schedule;
import com.neu.phmis.business.util.CommonUtil;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

/**
 *
 * @author Vineet
 */
public class ScheduleMaintenanceDialog extends javax.swing.JDialog {

    private Ecosystem ecosystem;
    private InventoryItem inventoryItem;
    private ArrayList<Date> availableDateList;
    private ManageInventoryItemsPanel manageInventoryItemsPanel;

    /**
     * Creates new form scheduleMaintenanceDialog
     */
    public ScheduleMaintenanceDialog(java.awt.Frame parent, boolean modal,
            InventoryItem inventoryItem,
            ManageInventoryItemsPanel manageInventoryItemsPanel) {

        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        ecosystem = Ecosystem.getInstance();
        this.inventoryItem = inventoryItem;
        this.manageInventoryItemsPanel = manageInventoryItemsPanel;
        availableDateList = new ArrayList<>();

        Date date = CommonUtil.getZeroTimeDate(new Date());
        for (int i = 0; i < 30; i++) {
            if (inventoryItem.isAvailable(date)) {
                availableDateList.add(date);
            }
            date = CommonUtil.getNextDate(date);
        }

        if (availableDateList.isEmpty()) {
            WebOptionPane.showMessageDialog(null,
                    "No available dates for the next 30 days", "Error",
                    WebOptionPane.ERROR_MESSAGE);
            this.dispose();
        } else {
            for (Date d : availableDateList) {
                datesCombo.addItem(CommonUtil.changeDateFormat(d,
                        "dd MMM, yyyy"));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datesCombo = new com.alee.laf.combobox.WebComboBox();
        scheduleBtn = new com.alee.laf.button.WebButton();
        viewRequestBtn1 = new com.alee.laf.button.WebButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        scheduleBtn.setForeground(new java.awt.Color(0, 0, 255));
        scheduleBtn.setText("Schedule");
        scheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        scheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleBtnActionPerformed(evt);
            }
        });

        viewRequestBtn1.setForeground(new java.awt.Color(0, 0, 255));
        viewRequestBtn1.setText("Cancel");
        viewRequestBtn1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewRequestBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(datesCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewRequestBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(datesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewRequestBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleBtnActionPerformed

        try {

            Date selectedDate = new SimpleDateFormat("dd MMM, yyyy",
                    Locale.ENGLISH).parse((String) datesCombo
                            .getSelectedItem());

            Schedule maintenanceSchedule = inventoryItem
                    .getMaintenanceSchedule();

            if (maintenanceSchedule == null) {
                Schedule schedule = new Schedule(Schedule.MAINTENANCE_SCHEDULE);
                schedule.setHospitalEnterprise(null);
                schedule.setScheduleDate(selectedDate);
                inventoryItem.getItemSchedule().getScheduleList().add(schedule);
            } else {
                if (WebOptionPane.showConfirmDialog(null, "Maintenance is "
                        + "already scheduled for this device. Do you want to "
                        + "replace it with the new schedule?", "Confirm",
                        WebOptionPane.YES_NO_OPTION)
                        == WebOptionPane.YES_OPTION) {
                    maintenanceSchedule.setScheduleDate(selectedDate);
                }
            }

            manageInventoryItemsPanel.populateTable();
            CommonUtil.saveChanges(ecosystem);
            this.dispose();

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_scheduleBtnActionPerformed

    private void viewRequestBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestBtn1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_viewRequestBtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScheduleMaintenanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScheduleMaintenanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScheduleMaintenanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScheduleMaintenanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScheduleMaintenanceDialog dialog
                        = new ScheduleMaintenanceDialog(
                                new javax.swing.JFrame(), true, inventoryItem,
                                manageInventoryItemsPanel);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.combobox.WebComboBox datesCombo;
    private com.alee.laf.button.WebButton scheduleBtn;
    private com.alee.laf.button.WebButton viewRequestBtn1;
    // End of variables declaration//GEN-END:variables
}
