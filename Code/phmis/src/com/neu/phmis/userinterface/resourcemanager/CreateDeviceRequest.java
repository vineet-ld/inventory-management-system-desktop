/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.resourcemanager;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.enterprise.Enterprise;
import com.neu.phmis.business.enterprise.HospitalEnterprise;
import com.neu.phmis.business.enterprise.WarehouseEnterprise;
import com.neu.phmis.business.network.Network;
import com.neu.phmis.business.organization.InventoryOrganization;
import com.neu.phmis.business.organization.Organization;
import com.neu.phmis.business.organization.ResourceOrganization;
import com.neu.phmis.business.request.DeviceRequest;
import com.neu.phmis.business.user.Person;
import com.neu.phmis.business.user.ResourceManager;
import com.neu.phmis.business.util.CommonUtil;
import com.neu.phmis.business.util.MailUtil;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vineet
 */
public class CreateDeviceRequest extends javax.swing.JDialog {

    private Ecosystem ecosystem;
    private HospitalEnterprise hospitalEnterprise;
    private ManageResourceRequestsPanel manageResourceRequestsPanel;
    private ResourceOrganization resourceOrganization;
    private ResourceManager resourceManager;

    /**
     * Creates new form CreateDeviceRequest
     */
    public CreateDeviceRequest(java.awt.Frame parent, boolean modal,
            HospitalEnterprise hospitalEnterprise,
            ResourceManager resourceManager,
            ManageResourceRequestsPanel manageResourceRequestsPanel) {

        super(parent, modal);
        initComponents();
        this.hospitalEnterprise = hospitalEnterprise;
        resourceOrganization = (ResourceOrganization) hospitalEnterprise
                .getOrganization(Organization.ORGANIZATION_RESOURCE);
        this.manageResourceRequestsPanel = manageResourceRequestsPanel;
        this.resourceManager = resourceManager;
        ecosystem = Ecosystem.getInstance();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webPanel1 = new com.alee.laf.panel.WebPanel();
        webMultiLineLabel2 = new com.alee.extended.label.WebMultiLineLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productsTable = new com.alee.laf.table.WebTable();
        addProductBtn = new com.alee.laf.button.WebButton();
        removeProductBtn = new com.alee.laf.button.WebButton();
        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel9 = new com.alee.laf.label.WebLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        specialRequestTxt = new com.alee.laf.text.WebTextArea();
        sendRequestBtn = new com.alee.laf.button.WebButton();
        cancelBtn = new com.alee.laf.button.WebButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        webMultiLineLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        webMultiLineLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webMultiLineLabel2.setText("Please list the devices you want to be ordered");

        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Device"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productsTable);

        addProductBtn.setText("Add");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });

        removeProductBtn.setText("Remove");
        removeProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductBtnActionPerformed(evt);
            }
        });

        webLabel1.setForeground(new java.awt.Color(0, 51, 255));
        webLabel1.setText("Create Device Request");
        webLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        webLabel9.setText("Special Instructions:");
        webLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

        specialRequestTxt.setColumns(20);
        specialRequestTxt.setRows(5);
        jScrollPane1.setViewportView(specialRequestTxt);

        sendRequestBtn.setForeground(new java.awt.Color(0, 0, 255));
        sendRequestBtn.setText("Send Request");
        sendRequestBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sendRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequestBtnActionPerformed(evt);
            }
        });

        cancelBtn.setForeground(new java.awt.Color(0, 0, 255));
        cancelBtn.setText("Cancel");
        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(webPanel1);
        webPanel1.setLayout(webPanel1Layout);
        webPanel1Layout.setHorizontalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap(182, Short.MAX_VALUE)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(webMultiLineLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                        .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)))
                .addContainerGap(182, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sendRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webPanel1Layout.setVerticalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(webMultiLineLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(addProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        getContentPane().add(webPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed

        try {

            String deviceName = WebOptionPane.showInputDialog(null,
                    "Enter Device Name:", "Add Device",
                    WebOptionPane.INFORMATION_MESSAGE);
            if (deviceName != null && !deviceName.isEmpty()) {

                DefaultTableModel defaultTableModel
                        = (DefaultTableModel) productsTable.getModel();
                Object row[] = new Object[1];
                row[0] = deviceName;
                defaultTableModel.addRow(row);

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addProductBtnActionPerformed

    private void removeProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductBtnActionPerformed

        int selectedRow = productsTable.getSelectedRow();

        if (selectedRow >= 0) {
            DefaultTableModel defaultTableModel
                    = (DefaultTableModel) productsTable.getModel();
            defaultTableModel.removeRow(selectedRow);
        }
    }//GEN-LAST:event_removeProductBtnActionPerformed

    private void sendRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequestBtnActionPerformed

        try {
            String errors = validateForm();

            if (errors.isEmpty()) {

                DeviceRequest deviceRequest = new DeviceRequest();

                ArrayList<String> productList = new ArrayList<>();
                for (int i = 0; i < productsTable.getRowCount(); i++) {
                    productList.add((String) productsTable.getValueAt(i, 0));
                }
                deviceRequest.setDeviceList(productList);
                if (!specialRequestTxt.getText().trim().isEmpty()) {
                    deviceRequest.setSpecialInstruction(specialRequestTxt
                            .getText().trim());
                }
                deviceRequest.setHospitalEnterprise(hospitalEnterprise);
                deviceRequest.setSentBy(resourceManager);
                deviceRequest.setStatus(DeviceRequest.STATUS_PENDING);

                WarehouseEnterprise warehouseEnterprise = null;

                Network network = resourceManager.retrieveNetwork();
                if (!network.getWarehouseEnterpriseDirectory()
                        .getEnterpriseList().isEmpty()) {
                    warehouseEnterprise = (WarehouseEnterprise) network
                            .getWarehouseEnterpriseDirectory()
                            .getEnterpriseList().get(0);
                    resourceManager.setNetwork(network);
                } else {
                    WebOptionPane.showMessageDialog(null, "No warehouse found "
                            + "within your network. Could not submit request.",
                            "Request Failed", WebOptionPane.ERROR_MESSAGE);
                }

                if (warehouseEnterprise != null) {
                    warehouseEnterprise.getDeviceRequestQueue().getRequestList()
                            .add(deviceRequest);
                    resourceManager.getDeviceRequestQueue().getRequestList()
                            .add(deviceRequest);
                }

                this.setVisible(false);
                manageResourceRequestsPanel.populateTables();

                InventoryOrganization inventoryOrganization
                        = (InventoryOrganization) warehouseEnterprise
                        .getOrganization(Organization.ORGANIZATION_INVENTORY);
                MailUtil mailUtil = null;
                for (Person person : inventoryOrganization.getPersonDirectory()
                        .getPersonList()) {

                    if (person.getUserAccount().getStatus() == 1) {
                        mailUtil = new MailUtil(person.getEmailId());
                        StringBuffer stringBuffer = new StringBuffer();
                        stringBuffer.append(person).append(",\n A new request "
                                + "has been submitted by ")
                                .append(resourceManager).append(" for "
                                        + "purchasing new devices.");
                        mailUtil.setEmailBody(stringBuffer.toString());
                        mailUtil.setEmailSubject("New Request Notification");
                        mailUtil.sendEmail();
                    }

                }

                CommonUtil.saveChanges(ecosystem);
            } else {
                WebOptionPane.showMessageDialog(null, errors, "Errors",
                        WebOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sendRequestBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    /* ---------------------------------------------------------------------- */
    /* Validates form
    
     Parameters: NONE
    
     Returns:
     1. errorText - STRING errors if there are any
     2. errorText - STRING blank if there are no errors
     */
    private String validateForm() {

        String errorText = "";

        try {

            int errorCount = 1;

            DefaultTableModel defaultTableModel
                    = (DefaultTableModel) productsTable.getModel();

            if (defaultTableModel.getRowCount() == 0) {
                errorText += errorCount + ". Please enter the devices that you "
                        + "need to be ordered\n";
                errorCount++;
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        } finally {
            return errorText;
        }

    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateDeviceRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateDeviceRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateDeviceRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateDeviceRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateDeviceRequest dialog
                        = new CreateDeviceRequest(new javax.swing.JFrame(),
                                true, hospitalEnterprise, resourceManager,
                                manageResourceRequestsPanel);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton addProductBtn;
    private com.alee.laf.button.WebButton cancelBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.alee.laf.table.WebTable productsTable;
    private com.alee.laf.button.WebButton removeProductBtn;
    private com.alee.laf.button.WebButton sendRequestBtn;
    private com.alee.laf.text.WebTextArea specialRequestTxt;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel9;
    private com.alee.extended.label.WebMultiLineLabel webMultiLineLabel2;
    private com.alee.laf.panel.WebPanel webPanel1;
    // End of variables declaration//GEN-END:variables
}
