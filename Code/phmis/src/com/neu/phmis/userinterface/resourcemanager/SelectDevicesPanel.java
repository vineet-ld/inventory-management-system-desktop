/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.resourcemanager;

import com.alee.extended.layout.VerticalFlowLayout;
import com.alee.extended.window.WebPopOver;
import com.alee.laf.label.WebLabel;
import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.enterprise.WarehouseEnterprise;
import com.neu.phmis.business.inventory.Product;
import com.neu.phmis.business.network.Network;
import com.neu.phmis.business.request.SurgeryRequest;
import com.neu.phmis.business.user.ResourceManager;
import com.neu.phmis.business.util.CommonUtil;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vineet
 */
public class SelectDevicesPanel extends javax.swing.JPanel {

    private SurgeryRequest surgeryRequest;
    private ResourceManager resourceManager;
    private Ecosystem ecosystem;
    private ScheduleSurgeryDialog scheduleSurgeryDialog;
    private WebPopOver webPopOver;
    private ArrayList<Product> deviceList;
    private WarehouseEnterprise warehouseEnterprise;
    private JPanel container;

    /**
     * Creates new form SelectDevicesPanel
     */
    public SelectDevicesPanel(SurgeryRequest surgeryRequest,
            ResourceManager resourceManager,
            ScheduleSurgeryDialog scheduleSurgeryDialog, JPanel container) {

        initComponents();

        this.scheduleSurgeryDialog = scheduleSurgeryDialog;
        this.surgeryRequest = surgeryRequest;
        this.resourceManager = resourceManager;
        this.container = container;
        deviceList = new ArrayList<>();

        ecosystem = Ecosystem.getInstance();

        warehouseEnterprise = null;

        Network network = resourceManager.retrieveNetwork();
        if (!network.getWarehouseEnterpriseDirectory().getEnterpriseList()
                .isEmpty()) {
            warehouseEnterprise = (WarehouseEnterprise) network
                    .getWarehouseEnterpriseDirectory().getEnterpriseList()
                    .get(0);
            resourceManager.setNetwork(network);
        } else {
            WebOptionPane.showMessageDialog(null, "No warehouse found within "
                    + "your network. Could not submit request.",
                    "Request Failed", WebOptionPane.ERROR_MESSAGE);
            scheduleSurgeryDialog.dispose();
        }

        if (warehouseEnterprise != null) {
            populateDeviceListTable("");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webLabel1 = new com.alee.laf.label.WebLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedDevicesTbl = new com.alee.laf.table.WebTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        devicesTbl = new com.alee.laf.table.WebTable();
        wishlistLbl = new com.alee.extended.label.WebStepLabel();
        processBtn = new com.alee.laf.button.WebButton();
        cancelBtn = new com.alee.laf.button.WebButton();
        addDeviceBtn = new com.alee.laf.button.WebButton();
        removeDeviceBtn = new com.alee.laf.button.WebButton();
        searchTxt = new com.alee.laf.text.WebTextField();

        webLabel1.setForeground(new java.awt.Color(0, 51, 255));
        webLabel1.setText("Schedule Surgery");
        webLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        selectedDevicesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selected Devices"
            }
        ));
        selectedDevicesTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(selectedDevicesTbl);

        devicesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select devices from the list"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        devicesTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(devicesTbl);

        wishlistLbl.setText("!");
        wishlistLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                wishlistLblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                wishlistLblMouseExited(evt);
            }
        });

        processBtn.setForeground(new java.awt.Color(0, 0, 255));
        processBtn.setText("Next >>");
        processBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        cancelBtn.setForeground(new java.awt.Color(0, 0, 255));
        cancelBtn.setText("Cancel");
        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        addDeviceBtn.setText(">>");
        addDeviceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeviceBtnActionPerformed(evt);
            }
        });

        removeDeviceBtn.setText("<<");
        removeDeviceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDeviceBtnActionPerformed(evt);
            }
        });

        searchTxt.setInputPrompt("Search Device");
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(242, 242, 242)
                            .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(wishlistLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeDeviceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addDeviceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(processBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wishlistLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(addDeviceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeDeviceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed

        try {

            SelectResourcesPanel selectResourcesPanel
                    = new SelectResourcesPanel(surgeryRequest, deviceList,
                            resourceManager, warehouseEnterprise,
                            scheduleSurgeryDialog);
            CommonUtil.insertNewPanel(container, "Select Resource Panel",
                    selectResourcesPanel, this);

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_processBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        scheduleSurgeryDialog.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void wishlistLblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wishlistLblMouseEntered
        try {
            if (surgeryRequest != null) {
                int count = 0;
                webPopOver = new WebPopOver(wishlistLbl);
                webPopOver.setCloseOnFocusLoss(true);
                webPopOver.setMargin(10);
                webPopOver.setLayout(new VerticalFlowLayout());
                webPopOver.add(new WebLabel("List of devices requested:"));
                for (String device : surgeryRequest.getDeviceList()) {
                    webPopOver.add(new WebLabel(++count + ". " + device));
                }
                webPopOver.show(wishlistLbl);
            }
        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_wishlistLblMouseEntered

    private void wishlistLblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wishlistLblMouseExited
        webPopOver.dispose();
    }//GEN-LAST:event_wishlistLblMouseExited

    private void addDeviceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeviceBtnActionPerformed

        try {

            int selectedRow = devicesTbl.getSelectedRow();

            if (selectedRow >= 0) {

                Product product = (Product) devicesTbl.getValueAt(selectedRow,
                        0);

                if (!deviceList.contains(product)) {
                    deviceList.add(product);
                    populateSelectedDevicesTable();
                } else {
                    WebOptionPane.showMessageDialog(null,
                            "Devices already selected", "Error",
                            WebOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addDeviceBtnActionPerformed

    private void removeDeviceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDeviceBtnActionPerformed

        try {

            int selectedRow = selectedDevicesTbl.getSelectedRow();

            if (selectedRow >= 0) {

                Product product = (Product) selectedDevicesTbl
                        .getValueAt(selectedRow, 0);

                deviceList.remove(product);
                populateSelectedDevicesTable();

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_removeDeviceBtnActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed

    }//GEN-LAST:event_searchTxtActionPerformed

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        populateDeviceListTable(searchTxt.getText().trim());
    }//GEN-LAST:event_searchTxtKeyReleased

    /* ---------------------------------------------------------------------- */
    /*
     Populate selected devices in the tables
    
     Parameters: NONE
    
     Returns: NONE
     */
    public void populateSelectedDevicesTable() {

        try {

            DefaultTableModel defaultTableModel
                    = (DefaultTableModel) selectedDevicesTbl.getModel();
            defaultTableModel.setRowCount(0);

            Object row[];
            for (Product product : deviceList) {

                row = new Object[1];
                row[0] = product;

                defaultTableModel.addRow(row);

            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }

    /*
     Populate devices in the tables
    
     Parameters: NONE
    
     Returns: NONE
     */
    public void populateDeviceListTable(String searchString) {

        try {

            DefaultTableModel defaultTableModel = (DefaultTableModel) devicesTbl
                    .getModel();
            defaultTableModel.setRowCount(0);

            Object row[] = null;
            for (Product product : warehouseEnterprise.getInventory()
                    .getDevices()) {
                if (searchString.isEmpty() || product.getProductName()
                        .toLowerCase().contains(searchString.toLowerCase())) {
                    row = new Object[1];
                    row[0] = product;
                    defaultTableModel.addRow(row);
                }
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton addDeviceBtn;
    private com.alee.laf.button.WebButton cancelBtn;
    private com.alee.laf.table.WebTable devicesTbl;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.alee.laf.button.WebButton processBtn;
    private com.alee.laf.button.WebButton removeDeviceBtn;
    private com.alee.laf.text.WebTextField searchTxt;
    private com.alee.laf.table.WebTable selectedDevicesTbl;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.extended.label.WebStepLabel wishlistLbl;
    // End of variables declaration//GEN-END:variables
}
