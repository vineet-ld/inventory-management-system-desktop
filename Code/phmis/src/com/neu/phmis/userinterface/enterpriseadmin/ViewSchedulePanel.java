/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.enterpriseadmin;

import com.neu.phmis.userinterface.doctor.*;
import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.Ecosystem;
import com.neu.phmis.business.enterprise.HospitalEnterprise;
import com.neu.phmis.business.organization.DoctorOrganization;
import com.neu.phmis.business.organization.Organization;
import com.neu.phmis.business.request.Request;
import com.neu.phmis.business.request.SurgeryRequest;
import com.neu.phmis.business.resource.SurgicalOperation;
import com.neu.phmis.business.user.Doctor;
import com.neu.phmis.business.user.Person;
import com.neu.phmis.business.util.CommonUtil;
import com.neu.phmis.userinterface.MainFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vineet
 */
public class ViewSchedulePanel extends javax.swing.JPanel {

    private Ecosystem ecosystem;
    private HospitalEnterprise hospitalEnterprise;
    private Person person;

    /**
     * Creates new form ManageSchedulePanel
     */
    public ViewSchedulePanel(HospitalEnterprise hospitalEnterprise) {
        initComponents();
        ecosystem = Ecosystem.getInstance();
        this.hospitalEnterprise = hospitalEnterprise;
        populateTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        scheduleTbl = new com.alee.laf.table.WebTable();
        viewBtn = new com.alee.laf.button.WebButton();

        scheduleTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Doctor", "Surgery Type", "Patient Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scheduleTbl.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(scheduleTbl);
        if (scheduleTbl.getColumnModel().getColumnCount() > 0) {
            scheduleTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        viewBtn.setForeground(new java.awt.Color(0, 0, 255));
        viewBtn.setText("View");
        viewBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed

        try {

            int selectedRow = scheduleTbl.getSelectedRow();

            if (selectedRow >= 0) {
                ViewScheduleDialog viewScheduleDialog
                        = new ViewScheduleDialog(MainFrame.mainFrame, true,
                                (SurgicalOperation) scheduleTbl
                                .getValueAt(selectedRow, 0));
                viewScheduleDialog.setVisible(true);
            } else {
                WebOptionPane.showMessageDialog(null, "No schedule selected",
                        "Error", WebOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    /* ---------------------------------------------------------------------- */
    /*
     Populate schedule in the table
    
     Parameters: NONE
    
     Returns: NONE
     */
    public void populateTables() {

        try {

            DefaultTableModel defaultTableModel
                    = (DefaultTableModel) scheduleTbl.getModel();
            defaultTableModel.setRowCount(0);

            DoctorOrganization doctorOrganization
                    = (DoctorOrganization) hospitalEnterprise
                    .getOrganization(Organization.ORGANIZATION_DOCTOR);

            Object row[];
            for (SurgicalOperation surgicalOperation : doctorOrganization
                    .getSurgicalSchedule().getOperationList()) {
                row = new Object[4];
                row[0] = surgicalOperation;
                row[1] = surgicalOperation.getDoctor();
                row[2] = surgicalOperation.getSurgeryType();
                row[3] = surgicalOperation.getPatientName();
                defaultTableModel.addRow(row);
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private com.alee.laf.table.WebTable scheduleTbl;
    private com.alee.laf.button.WebButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
