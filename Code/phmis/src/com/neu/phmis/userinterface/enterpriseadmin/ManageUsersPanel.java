/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.phmis.userinterface.enterpriseadmin;

import com.alee.laf.optionpane.WebOptionPane;
import com.neu.phmis.business.enterprise.Enterprise;
import com.neu.phmis.business.organization.Organization;
import com.neu.phmis.business.user.Person;
import com.neu.phmis.business.util.Constants;
import com.neu.phmis.userinterface.MainFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vineet
 */
public class ManageUsersPanel extends javax.swing.JPanel {

    private Enterprise enterprise;

    /**
     * Creates new form ManageUsersPanel
     */
    public ManageUsersPanel(Enterprise enterprise) {

        initComponents();

        this.enterprise = enterprise;
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webPanel1 = new com.alee.laf.panel.WebPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTbl = new com.alee.laf.table.WebTable();
        addUserBtn = new com.alee.laf.button.WebButton();

        setLayout(new java.awt.BorderLayout());

        usersTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person ID", "Name", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTbl.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(usersTbl);

        addUserBtn.setForeground(new java.awt.Color(0, 0, 255));
        addUserBtn.setText("Add New");
        addUserBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(webPanel1);
        webPanel1.setLayout(webPanel1Layout);
        webPanel1Layout.setHorizontalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(webPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webPanel1Layout.setVerticalGroup(
            webPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        add(webPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed

        try {

            CreateUserDialog createUserDialog
                    = new CreateUserDialog(MainFrame.mainFrame, true,
                            enterprise, this);
            createUserDialog.setVisible(true);

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addUserBtnActionPerformed

    /* ---------------------------------------------------------------------- */
    /*
     Populate users in the table
    
     Parameters: NONE
    
     Returns: NONE
     */
    public void populateTable() {

        try {

            DefaultTableModel defaultTableModel = (DefaultTableModel) usersTbl
                    .getModel();
            defaultTableModel.setRowCount(0);

            String statusString = "";

            Object row[];
            for (Organization organization : enterprise
                    .getOrganizationDirectory().getOrganizationList()) {
                for (Person person : organization.getPersonDirectory()
                        .getPersonList()) {

                    int status = person.getUserAccount().getStatus();
                    switch (status) {

                        case 1:
                            statusString = Constants.STATUS_ACTIVE;
                            break;

                        case 0:
                            statusString = Constants.STATUS_INACTIVE;
                            break;

                        case -1:
                            statusString = Constants.STATUS_DISABLED;
                            break;

                    }

                    row = new Object[4];
                    row[0] = person.getPersonId();
                    row[1] = person;
                    row[2] = person.getUserAccount().getRole();
                    row[3] = statusString;
                    defaultTableModel.addRow(row);

                }
            }

        } catch (Exception e) {
            WebOptionPane.showMessageDialog(null,
                    "Some Unexpected Error Occured\n" + e.getMessage(), "Error",
                    WebOptionPane.ERROR_MESSAGE);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton addUserBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private com.alee.laf.table.WebTable usersTbl;
    private com.alee.laf.panel.WebPanel webPanel1;
    // End of variables declaration//GEN-END:variables
}
